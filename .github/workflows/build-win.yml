name: Build Windows EXEs (x86 & x64)

on:
  push:
  workflow_dispatch:

jobs:
  build-windows:
    name: Build for ${{ matrix.arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            py: "3.10"
            exe_suffix: "win32"
          - arch: x64
            py: "3.10"
            exe_suffix: "win64"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Instala Python con la arquitectura deseada
      - name: Setup Python ${{ matrix.py }} ${{ matrix.arch }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          architecture: ${{ matrix.arch }}

      - name: Show Python version & arch
        shell: pwsh
        run: |
          python --version
          python -c "import struct, sys; print('Bits:', 8*struct.calcsize('P'), 'Arch:', '${{ matrix.arch }}')"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          # Si no tienes requirements.txt, descomenta la l√≠nea de abajo:
          # pip install flask flask-cors pywin32 pyinstaller pyinstaller-hooks-contrib

      - name: Build with PyInstaller
        shell: pwsh
        run: pyinstaller --onefile --noconsole --name "PluginServer-${{ matrix.exe_suffix }}" Plugin.py


      - name: List dist
        run: dir dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PluginServer-${{ matrix.exe_suffix }}
          path: dist/PluginServer-${{ matrix.exe_suffix }}.exe
